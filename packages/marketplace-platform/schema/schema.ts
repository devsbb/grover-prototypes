/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/merchant": {
    get: operations["merchant_read"];
  };
  "/checkout": {
    post: operations["checkout_create"];
  };
}

export interface components {
  schemas: {
    OrderRequest: {
      merchant_reference?: string;
      callback_url?: {
        success?: string;
        error?: string;
        cancel?: string;
        default?: string;
      };
      order?: components["schemas"]["Order"];
    };
    OrderResponse: {
      order_reference?: string;
      checkout_url?: string;
      customer_reference?: string;
      order?: components["schemas"]["Order"];
    };
    Merchant: {
      id?: number;
      code: string;
      name?: string;
      base_url?: string;
      features?: components["schemas"]["MarketFeature"][];
    };
    Customer: {
      id?: number;
      first_name: string;
      last_name: string;
      birthdate: string;
      email: string;
      phone: string;
      verification?: string;
      tag?: string;
    };
    Address: {
      zipcode: number;
      address1: string;
      address2?: string;
      city: string;
      country: string;
      additional_info?: string;
    };
    Order: {
      order_mode: string;
      order_number?: string;
      shipping_address: components["schemas"]["Address"];
      billing_address?: components["schemas"]["Address"];
      customer: components["schemas"]["Customer"];
      payment?: components["schemas"]["Payment"];
      adjustment?: components["schemas"]["Adjustment"];
      items: components["schemas"]["LineItem"];
      total?: number;
    };
    Error: {
      code: number;
      message: string;
    };
    Adjustment: {
      adjustment_type?: string;
      amount?: number;
      applied?: boolean;
    };
    Payment: {
      payment_type?: string;
      payment_reference?: string;
    };
    LineItem:
      | components["schemas"]["FlexLineItem"]
      | components["schemas"]["MixLineItem"];
    FlexLineItem: {
      product_sku: string;
      variant_sku: string;
      quantity?: number;
      rental_plan_id: number;
    };
    MixLineItem: {
      product_sku: string;
      variant_sku: string;
      category_id: number;
      subcategory_id: number;
    };
    MarketFeature: {
      merchant_id?: number;
      feature_id?: number;
      active?: boolean;
      config?: {
        id?: number;
        value?: string;
      };
    };
  };
}

export interface operations {
  merchant_read: {
    responses: {
      /** The created resource and its control webhooks */
      200: {
        content: {
          "application/json": components["schemas"]["Merchant"];
        };
      };
      /** Unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  checkout_create: {
    responses: {
      /** The created resource and its control webhooks */
      200: {
        content: {
          "application/json": components["schemas"]["OrderResponse"];
        };
      };
      /** Unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["OrderRequest"];
      };
    };
  };
}
